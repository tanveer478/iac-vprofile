name: "Vprofile IAC" # Name of the workflow
on: # When to trigger the workflow
  push: # Whenever there is push on branch below or change in the path below triggers workflow
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
#setup env variables to store our secrets
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform: # name of the job
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest # runner is nothing but a container to run commands
    defaults:
      run:
        shell: bash
        working-directory: ./terraform # this will cd into the runner container
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4 # checks out/downloads the source code on the runner's working working-directory

      - name: Setup terraform on runner
        uses: hashicorp/setup-terraform@v2 # installs terraform on runner

      - name: Terraform init
        id: init # id can be used for reference in next task
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check # -check checks whether the format is correct or no. If it's incorrect, then workflow fails with exit code

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
